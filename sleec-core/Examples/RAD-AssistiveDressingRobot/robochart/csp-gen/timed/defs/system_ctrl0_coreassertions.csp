
--
-- RoboChart generator version 3.0.0.202306261132
-- Automatically generated on 02-11-2023 11:20:40
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "system_defs.csp"
include "core_timed_defs.csp"
include "system_ctrl0.csp"
include "core_defs.csp"
include "state_timed_defs.csp"
include "robochart_defs.csp"
include "../instantiations.csp"

transparent wbisim
channel r__
-- generate system_ctrl0
P_system_ctrl0 = let
	id__ = 0
	
	
	
		
within
	system_ctrl0::O__(id__)

assert P_system_ctrl0 :[deadlock-free]	
assert P_system_ctrl0;RUN({r__}) :[deadlock-free]
assert P_system_ctrl0 :[deterministic]
assert P_system_ctrl0 :[divergence-free]

-- generate system_ctrl0_stm_ref0
P_system_ctrl0_stm_ref0 = let
	id__ = 0
	
	
	
within
	system_ctrl0::stm_ref0::O__(
		id__
	)
assert P_system_ctrl0_stm_ref0 :[deadlock-free]	
assert P_system_ctrl0_stm_ref0;RUN({r__}) :[deadlock-free]
assert P_system_ctrl0_stm_ref0 :[deterministic]
assert P_system_ctrl0_stm_ref0 :[divergence-free]
-- timed deadlock free
assert prioritise(P_system_ctrl0_stm_ref0[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_system_ctrl0_stm_ref0
-- generate system_ctrl0_stm_ref1
P_system_ctrl0_stm_ref1 = let
	id__ = 0
	
	
	
within
	system_ctrl0::stm_ref1::O__(
		id__
	)
assert P_system_ctrl0_stm_ref1 :[deadlock-free]	
assert P_system_ctrl0_stm_ref1;RUN({r__}) :[deadlock-free]
assert P_system_ctrl0_stm_ref1 :[deterministic]
assert P_system_ctrl0_stm_ref1 :[divergence-free]
-- timed deadlock free
assert prioritise(P_system_ctrl0_stm_ref1[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_system_ctrl0_stm_ref1
-- timed deadlock free
assert prioritise(P_system_ctrl0[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_system_ctrl0
